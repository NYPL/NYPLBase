/*------------------------------------*\
    $NYPL-BUTTONS
\*------------------------------------*/
/**
 * This is what our calls-to-action buttons look like.
 * The ".btn" class is extended for form inputs too.
 */


		/** NOTE TO SELF ------------------------------------
		 * Buttons contain styling decisions based on a color choice.
		 *
		 * Styling decisions are:
		 *		- background color, which contains a gradient
		 *		- text color
		 *		- hover color
		 *
		 * Color choice should IDEALLY come from an added color class:
		 * 		<a class="btn red">
		 * rather than redefining a background color in a class used only for buttons.
		 *
		 * HOW DO I MAKE .btn PRODUCE THE BG GRADIENT, TEXT COLOR, AND HOVER EFFECT
		 * BASED ON THE CONCATENATED COLOR CLASS???
		 

				THIS MIGHT WORK BUT I DON'T KNOW HOW TO USE IT:
				
				@mixin color-name(CLASSNAME, $color){
					.#{CLASSNAME} {
						background-color: $color;
					}
				}
				
		* ------------------------------------
		*/

.btn, a.btn{
 	@include button-color($beautons);
	@extend %transition !optional;
	
	margin: $half-spacing-unit/2;
}

button{
	@extend .btn;
}


.btn--inactive {
	background: $warmGrayLighter;
	-webkit-transition: none;
	transition: none;
	
	&:hover{
		background-color: $warmGrayLighter;
	}
}

/**
 * For now, in order to override a btn's color settings
 * you have to add a class. Create it here.
 */ 

.btn--greenNeon {
	@include button-color($greenNeon);
}
.btn--orange {
	@include button-color($orange);
}
.btn--black {
	@include button-color($black);
}

/**
 * These purpose-specific buttons have styles defined for them
 * in the mixin. There is almost certainly a better way to do this.
 */ 

.btn--donate {
	@include button-f11y-context(donate);
	
	&:visited{
		color: $white;	
	}
}
.btn--friends {
	@include button-f11y-context(friends);
}
.btn--sso {
	@include button-f11y-context(sso);

	&:visited{
		color: $white;	
	}	
	&:hover{
		color: $white;
	}
}
.btn--catalog {
	@include button-f11y-context(catalog);
}
.btn--nyplorg {
	@include button-f11y-context(nyplorg);
}



