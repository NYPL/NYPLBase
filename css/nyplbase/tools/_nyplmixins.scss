/*------------------------------------*\
    $NYPL-MIXINS
\*------------------------------------*/

			/*------------NOTE TO SELF:
				All mixins and helpers need to be
				documented in the style guide
				for developers
				
				(That goes for Inuit stuff too!)
			\*------------------------------------*/
	

/*------------------------------------*\
 * COLORS & GRADIENTS
\*------------------------------------*/

/**
 * Callouts
 * puts a background color and 1px solid border on a container.
 
 	@include callout-box($blueLight, $indigo, $indigo);
 
 * creates a light blue background with dark blue border and text.
 	
 */
@mixin callout-box($bgcolor, $bordercolor, $textcolor: $black){
	background-color: $bgcolor;
	border-width: 1px;
	border-style: solid;
	border-color: $bordercolor;
	border-radius:$brand-round;	
	color: $textcolor;
	padding: $half-spacing-unit;
}
 
/**
 * Gradient
 * makes a simple linear top-to-bottom gradient.
 
 	@include linear-gradient($blue, $indigo);
 
 */
@mixin linear-gradient($color, $toColor) {
	background-color: $color;
	background-image: -webkit-linear-gradient(top, $color, $toColor);
	background-image: 		  linear-gradient(top, $color, $toColor);
}

/**
 * Text color
 * evaluates the background color of an element 
 * in order to pick which text color to use on top of it.
 * Also used for within our button-color mixin.
 
	 @include text-on-bg($blue);
 
 */ 
@mixin text-on-bg($color){
	@if lightness($color) <= 55% {
			color: $white;	
	}
	@else {
			color: inherit;		
	}
}



/*------------------------------------*\
 * OBJECTS
\*------------------------------------*/

/**
 * Tooltips
 * STILL WORKING ON THIS ONE -jA
 */
@mixin tooltip ($top, $side, $bgcolor: $blue, $textcolor: $white){
	background-color: rgba($bgcolor, .8);
	border-radius:$brand-round;
	color: $textcolor;
	padding: $half-spacing-unit;
	max-width: 80%;
	height: auto;
	
	// positioning
	position: absolute;
	top: $top;
	left: $side;
	
	//	@include arrow(right, center, rgba($blue, .8));
	
}

/*------------------------------------*\
 * BUTTONS
\*------------------------------------*/

// The following mixin is kind of based on http://tallpixels.com/advanced-sass-mixins/

/*
 * This styles the button based on the color parameter, including text color.
 * It also concatenates the ".gradient" class so that the mixin
 * can use the background color to evaluate the darker stop color.
*/
@mixin button-color($color){
	background: $color;
	@include text-on-bg($color);

	&.gradient{
		$toColor: darken($color, $brand-gradient);
		@include linear-gradient($color, $toColor);		
	}

	&:hover{
		opacity: .85;
	}
}

/* 
 * Some buttons have specific use cases, such as the Donate button,
 * and must be styled very specifically.
 * Add context names here to add specific styling;
 * the name you add provides the second part of the class name.
   
	USAGE:
	.btn--donate {
		@include f11y-context(donate)
	}
*/
@mixin button-f11y-context($context-name){
	@if $context-name == donate {@include button-color($red); text-transform: uppercase;}
	@if $context-name == friends {@include button-color($greenNeon); color: $black; text-transform: uppercase;}
	@if $context-name == sso {@include button-color($warmGrayDarker); text-transform: uppercase;}
	@if $context-name == catalog {@include button-color($indigo); color: $white; text-transform: none;}
	@if $context-name == nyplorg {@include button-color($blue); color: $white; text-transform: none;}
}
